in this paper we study the trade-offs in designing efficient
caching systems for web search engines. we explore the
impact of different approaches, such as static vs. dynamic
caching, and caching query results vs. caching posting lists.
using a query log spanning a whole year we explore the 
limitations of caching and we demonstrate that caching posting
lists can achieve higher hit rates than caching query 
answers. we propose a new algorithm for static caching of
posting lists, which outperforms previous methods. we also
study the problem of finding the optimal way to split the
static cache between answers and posting lists. finally, we
measure how the changes in the query log affect the 
effectiveness of static caching, given our observation that the
distribution of the queries changes slowly over time. our
results and observations are applicable to different levels of
the data-access hierarchy, for instance, for a memory/disk
layer or a broker/remote server layer.
