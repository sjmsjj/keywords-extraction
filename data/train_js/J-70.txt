often, an outcome must be chosen on the basis of the 
preferences reported by a group of agents. the key difficulty
is that the agents may report their preferences insincerely
to make the chosen outcome more favorable to themselves.
mechanism design is the art of designing the rules of the
game so that the agents are motivated to report their 
preferences truthfully, and a desirable outcome is chosen. in a
recently proposed approach-called automated mechanism
design-a mechanism is computed for the preference 
aggregation setting at hand. this has several advantages, but the
downside is that the mechanism design optimization 
problem needs to be solved anew each time. unlike the earlier
work on automated mechanism design that studied a 
benevolent designer, in this paper we study automated mechanism
design problems where the designer is self-interested. in this
case, the center cares only about which outcome is chosen
and what payments are made to it. the reason that the
agents" preferences are relevant is that the center is 
constrained to making each agent at least as well off as the agent
would have been had it not participated in the mechanism.
in this setting, we show that designing optimal deterministic
mechanisms is np-complete in two important special cases:
when the center is interested only in the payments made
to it, and when payments are not possible and the center
is interested only in the outcome chosen. we then show
how allowing for randomization in the mechanism makes
problems in this setting computationally easy. finally, we
show that the payment-maximizing amd problem is closely
related to an interesting variant of the optimal 
(revenuemaximizing) combinatorial auction design problem, where
the bidders have best-only preferences. we show that
here, too, designing an optimal deterministic auction is 
npcomplete, but designing an optimal randomized auction is
easy.
